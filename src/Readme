Prerequisites:
 - Obliv-C (https://github.com/samee/obliv-c)
 - Absentminded Crypto Kit (https://bitbucket.org/jackdoerner/absentminded-crypto-kit/src)

To run the code:
- Go to DecentralizedCA/src
- run 'make'
- To run on local machine: run './a.out [port-number] -- [proto] [operation] & ./a.out [port-number] localhost [proto] [operation]'
- To run on separate machines: run './a.out [port-number] -- [proto] [operation]' on server machine and run './a.out [port-number] [remote-host] [proto] [operation]' on client machine
- proto defines the protocol to be executed - Yao or DualEx. The options of proto are 'yao' and 'dualex'
- operation defines the ECDSA operation to bed executed - Public Key Generation or Certificate Signing. The options of operation are 'genPubKey' and 'signCert'
- Warning: Both the parties should use the exact same values of proto and operation, else the code will fail!

For now, the code uses secp192k1 curve, and this could be easily extended to any standard Elliptic Curve. The code will output the ECDSA public key pair (Q_x, Q_y) in case of 'genPubKey', and ECDSA signature pair (r,s) in case of 'signCert'.
