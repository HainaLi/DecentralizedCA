#ifndef OBLIV_CA_OH
#define OBLIV_CA_OH

#include <obliv.oh>
#include <obig.oh>

#define MAXN 24
#define E_LENGTH 24

typedef struct curve{
  obig p;
  obig a;
  obig b;
  obig g_x, g_y;
  obig n;
}curve;

typedef struct protocolIO{
  uint8_t private_key_share1[1];
  uint8_t private_key_share2[1];
  uint8_t k1[1];
  uint8_t k2[1];
  uint8_t p[MAXN];
  uint8_t a[MAXN];
  uint8_t b[MAXN];
  uint8_t g_x[MAXN], g_y[MAXN];
  uint8_t Q_x[MAXN], Q_y[MAXN];
  uint8_t n[MAXN];
  uint8_t e[MAXN];
  uint8_t r[MAXN];
  uint8_t s[MAXN];
  bool tempBool;
  int RisZero, SisZero;
}protocolIO;

void signCertificate(void* args);

void pointDouble(obig* resx, obig* resy, obig px, obig py, obig a, obig p);
void pointAdd(obig* resx, obig* resy, obig px, obig py, obig qx, obig qy, obig p);
void curveMult(obig* resx, obig* resy, obig gx, obig gy, obig d, obig a, obig p);
void mult_inverse(obig *out, obig A, obig M);

#endif
